{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/christian/dev/hasanhub/app/root.tsx", "../app/components/header.tsx", "../app/components/layout.tsx", "../app/components/tagButton.tsx", "../app/components/sidebar.tsx", "../app/utils/prisma.server.ts", "../app/lib/getStreamInfo.server.ts", "/Users/christian/dev/hasanhub/app/routes/[sitemap.xml].tsx", "/Users/christian/dev/hasanhub/app/routes/[robots.txt].tsx", "/Users/christian/dev/hasanhub/app/routes/tags/$.tsx", "../app/lib/getVideos.ts", "../app/components/Taglist.tsx", "../app/components/VideoGridItem.tsx", "../app/components/VideosGrid.tsx", "../app/components/loadingSpinner.tsx", "../app/lib/getActiveTagsBySlugs.ts", "../app/hooks/useSearchParams.ts", "../app/helpers/buildUrl.ts", "/Users/christian/dev/hasanhub/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Tag } from \"@prisma/client\";\nimport { json, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useFetcher,\n  useLoaderData,\n  useSearchParams,\n} from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport type { TimeFilterOptions } from \"./components/filters\";\nimport Layout from \"./components/layout\";\nimport Sidebar from \"./components/sidebar\";\nimport styles from \"./styles/app.css\";\nimport { prisma } from \"./utils/prisma.server\";\nimport { useTransition } from \"@remix-run/react\";\nimport { getStreamInfo } from \"./lib/getStreamInfo.server\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"HasanHub\",\n  viewport: \"width=device-width,initial-scale=1\",\n  description: \"The HasanAbi Clips Industrial Complex App\",\n  \"msapplication-tileColor\": \"#da532c\",\n  \"theme-color\": \"#ffffff\",\n  \"yandex-verification\": \"45afda70569d2af8\",\n});\n\nexport function links() {\n  return [\n    { rel: \"stylesheet\", href: styles },\n    { rel: \"icon\", href: \"/favicon.ico\" },\n    {\n      rel: \"apple-touch-icon\",\n      size: \"180x180x\",\n      href: \"/apple-touch-icon.png\",\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"32x32\",\n      href: \"/favicon-32x32.png\",\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"16x16\",\n      href: \"/favicon-16x16.png\",\n    },\n    {\n      rel: \"mask-icon\",\n      href: \"/safari-pinned-tab.svg\",\n      color: \"#5bbad5\",\n    },\n    {\n      rel: \"manifest\",\n      href: \"site.webmanifest\",\n    },\n    {\n      rel: \"preconnect\",\n      href: \"\thttps://i.ytimg.com\",\n    },\n    {\n      rel: \"dns-prefetch\",\n      href: \"\thttps://i.ytimg.com\",\n    },\n  ];\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const slugs = params[\"*\"]?.split(\"/\") ?? [];\n\n  const [tags, [streamInfo, schedule]] = await Promise.all([\n    prisma.tag.findMany({\n      orderBy: {\n        videos: {\n          _count: \"desc\",\n        },\n      },\n    }),\n    getStreamInfo(),\n  ]);\n\n  console.log(JSON.stringify({ params, request }));\n\n  await prisma.$disconnect();\n\n  return json({\n    tags,\n    streamInfo,\n    schedule,\n    slugs,\n  });\n};\n\nexport default function App() {\n  const { tags, slugs, streamInfo, schedule } = useLoaderData();\n  const activeTags =\n    slugs.length > 0 ? tags.filter((tag) => slugs.includes(tag.slug)) : [];\n  const [searchParams] = useSearchParams();\n  const durationFilter = searchParams.getAll(\"duration\") ?? [\"all\"];\n  const fetcher = useFetcher();\n  const transition = useTransition();\n  const nextSearchParams = new URLSearchParams(transition.location?.search);\n  const nextDuration = nextSearchParams.getAll(\"duration\");\n\n  useEffect(() => {\n    if (transition.location) {\n      fetcher.load(transition.location.pathname);\n    }\n  }, [transition.location]);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout streamInfo={streamInfo} streamSchedule={schedule}>\n          <Sidebar\n            tags={tags}\n            activeTags={fetcher.data?.activeTags ?? activeTags}\n            durationFilter={\n              nextDuration.length > 0 ? nextDuration : durationFilter\n            }\n          />\n          <Outlet />\n        </Layout>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n\n        <script\n          defer\n          src=\"/stats/js/script.js\"\n          data-api=\"/stats/api/event\"\n          data-domain=\"hasanhub.com\"\n        />\n      </body>\n    </html>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport type { StreamInfo, StreamSchedule } from \"~/lib/getStreamInfo.server\";\n\nconst formatDate = (date: string | Date) => {\n  if (typeof date === \"string\") {\n    return (\n      new Date(date).toLocaleDateString() +\n      \" \" +\n      new Date(date).toLocaleTimeString()\n    );\n  }\n\n  return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n};\n\nconst Header = ({\n  streamInfo,\n  streamSchedule,\n}: {\n  streamInfo: StreamInfo;\n  streamSchedule: StreamSchedule;\n}) => {\n  return (\n    <header className=\"px-5 lg:px-10 xl:px-14 my-6  gap-5 grid grid-cols-1 grid-rows-[auto_auto_auto] sm:grid-cols-2 sm:grid-rows-[auto_auto] xl:grid-rows-1 lg:grid-cols-[25%_auto] xl:grid-cols-[20%_auto_auto]\">\n      <Link\n        to=\"/\"\n        prefetch=\"render\"\n        className=\"col-span-1 sm:col-span-1 flex items-center justify-center sm:justify-start\"\n      >\n        <h1 className=\"text-[2.5rem] font-bold sm:text-left group text-center inline-block w-min whitespace-nowrap\">\n          <span>Hasan</span>\n          <span className=\"dark:text-lightBlack text-light inline-block bg-twitchPurpleLight group-hover:bg-twitchPurple px-2 py-1 ml-2 rounded-lg saturate-50\">\n            Hub\n          </span>\n        </h1>\n      </Link>\n\n      <div className=\"col-span-1 row-start-3 sm:col-span-2 sm:row-start-2 xl:row-start-1 xl:col-start-2 xl:col-span-1 w-full text-center xl:text-left lg:text-sm xl:max-w-[60ch]\">\n        {streamInfo.data?.length > 0 ? (\n          <a\n            className=\"hover:text-twitchPurple dark:hover:text-twitchPurpleLight saturate-50\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitch.tv/${streamInfo.data[0][\"user_login\"]}`}\n          >\n            <p className=\"\">\n              <strong className=\"text-twitchPurple dark:text-twitchPurpleLight saturate-50\">\n                {streamInfo.data[0][\"user_name\"]}\n              </strong>{\" \"}\n              is live now: <br />\"{streamInfo.data[0][\"title\"]}\"\n            </p>\n          </a>\n        ) : (\n          streamSchedule.data && (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"hover:text-twitchPurple dark:hover:text-twitchPurpleLight saturate-50\"\n              href={`https://twitch.tv/${streamSchedule.data[\"broadcaster_login\"]}`}\n            >\n              <p>\n                <strong className=\"text-twitchPurple dark:text-twitchPurpleLight saturate-50\">\n                  {streamSchedule.data?.[\"broadcaster_name\"]}\n                </strong>{\" \"}\n                is live at{\" \"}\n                <strong className=\"text-twitchPurple dark:text-twitchPurpleLight saturate-50\">\n                  {formatDate(\n                    streamSchedule.data?.[\"segments\"][0][\"start_time\"]\n                  )}\n                </strong>{\" \"}\n                <br />\"{streamSchedule.data?.[\"segments\"][0][\"title\"]}\"\n              </p>\n            </a>\n          )\n        )}\n      </div>\n\n      <div className=\"col-span-1 row-start-2 sm:row-start-1 sm:col-start-2 sm:col-span-1 xl:col-start-3 flex flex-row gap-2 justify-center md:justify-end items-center text-sm md:text-base\">\n        <a\n          href=\"https://twitter.com/chrcit\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"bg-twitchPurpleLight saturate-50 text-light text-center font-bold betterhover:hover:bg-twitchPurple px-4 py-2 rounded\"\n        >\n          Made by @chrcit\n        </a>\n        <a\n          href=\"https://buymeacoffee.com/chrcit\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"bg-twitchPurpleLight saturate-50 text-light text-center font-bold betterhover:hover:bg-twitchPurple px-4 py-2 rounded\"\n        >\n          Buy me a coffee\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n", "import type { StreamInfo, StreamSchedule } from \"~/lib/getStreamInfo.server\";\nimport Header from \"~/components/header\";\n\nconst Layout = ({\n  children,\n  streamInfo,\n  streamSchedule,\n}: {\n  children: React.ReactNode;\n  streamInfo: StreamInfo;\n  streamSchedule: StreamSchedule;\n}) => {\n  return (\n    <>\n      <Header streamInfo={streamInfo} streamSchedule={streamSchedule} />\n      <main className=\"mx-auto items-start px-0 lg:px-10 xl:px-14 flex flex-col lg:flex-row relative lg:gap-5\">\n        {children}\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n", "import cx from \"classnames\";\nimport { Link } from \"@remix-run/react\";\n\nconst TagButton = ({\n  label,\n  active = false,\n  styleVariant = \"sidebar\",\n  href,\n}: {\n  href: string;\n  active?: boolean;\n  label: string;\n  styleVariant: \"sidebar\" | \"taglist\";\n}) => {\n  return (\n    <>\n      <div className=\"min-w-max\">\n        <Link\n          to={href}\n          className={cx(\n            \"border-twitchPurpleLight duration-400 transition-colors border  betterhover:hover:bg-twitchPurple betterhover:hover:text-light inline-block rounded-lg saturate-50 \",\n            styleVariant === \"sidebar\"\n              ? \"text-base px-3 py-2\"\n              : \"text-base px-2 py-1\",\n            active\n              ? \"bg-twitchPurpleLight text-light\"\n              : \"bg-light dark:bg-lightBlack text-twitchPurpleLight\"\n          )}\n        >\n          {label}\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default TagButton;\n", "import type { Tag } from \"@prisma/client\";\nimport TagButton from \"./tagButton\";\nimport type { TimeFilterOptions } from \"./filters\";\nimport { useEffect, useState } from \"react\";\n\nconst constructUrl = (\n  base: string,\n  activeSlugs: string[],\n  newSlug: string | null,\n  activeDurationFilter: TimeFilterOptions[],\n  newDuration: TimeFilterOptions | null\n) => {\n  let slugs = activeSlugs;\n  if (newSlug) {\n    slugs = activeSlugs.includes(newSlug)\n      ? activeSlugs.filter((slug) => slug !== newSlug)\n      : [...activeSlugs, newSlug];\n    slugs = slugs.sort();\n  }\n\n  const slugParams = slugs.join(\"/\");\n\n  let durations = activeDurationFilter;\n  if (newDuration) {\n    durations = activeDurationFilter.includes(newDuration)\n      ? activeDurationFilter.filter((d) => d !== newDuration)\n      : [...activeDurationFilter, newDuration];\n    durations = durations.sort();\n  }\n\n  const durationParams = durations\n    .map((option) => `duration=${option}`)\n    .join(\"&\");\n\n  let fullUrl = `${base}${slugParams}?${durationParams}`;\n\n  return fullUrl.endsWith(`${base}?${durationParams}`)\n    ? \"/\" + fullUrl.replace(base, \"\")\n    : fullUrl;\n};\n\nconst Sidebar = ({\n  tags,\n  activeTags,\n  durationFilter,\n}: {\n  tags: Tag[];\n  activeTags: Tag[];\n  durationFilter: TimeFilterOptions[];\n}) => {\n  const [base, setBase] = useState(activeTags.length > 0 ? \"/tags/\" : \"/\");\n  const activeTagSlugs = activeTags.map((tag) => tag.slug ?? \"\");\n  const durationFilterData: { value: TimeFilterOptions; label: string }[] = [\n    { value: \"short\", label: \"< 3min\" },\n    { value: \"medium\", label: \"3-15min\" },\n    { value: \"long\", label: \"15-30min\" },\n    { value: \"extralong\", label: \"> 30 min\" },\n  ];\n\n  useEffect(() => {\n    setBase(activeTags.length > 0 ? \"/tags/\" : \"/\");\n  }, [activeTags]);\n\n  return (\n    <>\n      <aside className=\"w-full lg:sticky lg:top-0 lg:w-1/4 xl:w-1/5  py-5 px-3 lg:px-0 transition-opacity duration-100\">\n        <section className=\"lg:overflow-y-auto lg:max-h-[calc(100vh-2.5rem)] lg:pr-3 flex flex-col gap-y-5\">\n          {/* Time */}\n          <ul className=\"flex flex-row flex-nowrap pb-3 sm:pb-0 overflow-x-auto sm:overflow-x-visible sm:flex-wrap rounded gap-3\">\n            {durationFilterData.map(({ value, label }, index) => (\n              <li\n                className=\"min-w-max\"\n                key={value}\n                style={{\n                  animationDuration: `${\n                    250 + index * (index < 10 ? 50 : 25)\n                  }ms`,\n                  animationName: \"fadeIn\",\n                }}\n              >\n                <TagButton\n                  href={constructUrl(\n                    base,\n                    activeTagSlugs,\n                    null,\n                    durationFilter,\n                    value\n                  )}\n                  styleVariant=\"sidebar\"\n                  label={label}\n                  active={durationFilter.includes(value)}\n                />\n              </li>\n            ))}\n          </ul>\n\n          {/* Tags  */}\n          <ul className=\"grid pb-3  lg:pb-0  grid-flow-col grid-rows-2 sm:grid-rows-4 lg:flex lg:flex-row flex-nowrap lg:flex-wrap gap-y-2 gap-x-3 text-base overflow-x-auto lg:overflow-x-visible\">\n            {tags.map((tag, index) => (\n              <li\n                className=\"min-w-max\"\n                style={{\n                  animationDuration: `${\n                    250 + index * (index < 15 ? 50 : 25)\n                  }ms`,\n                  animationName: \"fadeIn\",\n                }}\n                key={tag.id}\n              >\n                <TagButton\n                  href={constructUrl(\n                    \"/tags/\",\n                    activeTagSlugs,\n                    tag.slug,\n                    durationFilter,\n                    null\n                  )}\n                  styleVariant=\"sidebar\"\n                  label={tag.name}\n                  active={activeTagSlugs.includes(tag.slug ?? \"\")}\n                />\n              </li>\n            ))}\n          </ul>\n        </section>\n      </aside>\n    </>\n  );\n};\n\nexport default Sidebar;\n", "// app/utils/prisma.server.ts\nimport { PrismaClient } from '@prisma/client'\n\nlet prisma: PrismaClient\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n  prisma.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  prisma = global.__db\n}\n\nexport { prisma }", "export type StreamInfo = {\n    data: {\n        id: string;\n        user_id: string;\n        user_login: string;\n        user_name: string;\n        game_id: string;\n        game_name: string;\n        type: string;\n        title: string;\n        viewer_count: number;\n        started_at: Date;\n        language: string;\n        thumbnail_url: string;\n        tag_ids: string[];\n        is_mature: boolean;\n    }[];\n    pagination: {\n        cursor: string\n    };\n}\n\nexport type StreamSchedule = {\n    data: {\n        segments: {\n            id: string;\n            start_time: Date;\n            end_time: Date;\n            title: string;\n            canceled_until?: any;\n            category: {\n                id: string;\n                name: string;\n            };\n            is_recurring: boolean;\n        }[];\n        broadcaster_id: string;\n        broadcaster_name: string;\n        broadcaster_login: string;\n        vacation?: any;\n    };\n    pagination: {};\n}\n\n\nexport const getStreamInfo = async () => {\n    return await Promise.all([\n      fetch(`https://api.twitch.tv/helix/streams?first=1&user_id=${207813352}`, {\n        headers: {\n          \"Client-Id\": process.env.TWITCH_CLIENT_ID?.trim() ?? \"\",\n          \"Authorization\": `Bearer ${process.env.TWITCH_ACCESS_TOKEN ?? \"\"}`,\n        },\n      }).then((res) => res.json()) as unknown as StreamInfo,\n      fetch(`https://api.twitch.tv/helix/schedule?broadcaster_id=${207813352}`, {\n        headers: {\n          \"Client-Id\": process.env.TWITCH_CLIENT_ID?.trim() ?? \"\",\n          \"Authorization\": `Bearer ${process.env.TWITCH_ACCESS_TOKEN ?? \"\"}`,\n        },\n      }).then((res) => res.json())  as unknown as StreamSchedule,\n    ]);\n  };", "import { prisma } from \"~/utils/prisma.server\";\n\nexport const loader = async () => {\n  const BASE_URL = \"https://hasanhub.com\";\n\n  const tags = await prisma.tag.findMany();\n\n  const sitemap = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        <url>\n            <loc>${BASE_URL}/</loc>\n            <lastmod>${new Date().toISOString()}</lastmod>\n            <changefreq>daily</changefreq>\n            <priority>1.0</priority>\n        </url>  \n    ${tags.map((tag) => {\n      return `\n        <url>\n            <loc>${BASE_URL}/tags/${tag.slug}</loc>\n            <lastmod>${new Date().toISOString()}</lastmod>\n            <changefreq>daily</changefreq>\n            <priority>1.0</priority>\n        </url>\n            `;\n    })}\n    </urlset>\n  `;\n\n  return new Response(sitemap, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"application/xml\",\n      \"xml-version\": \"1.0\",\n      encoding: \"UTF-8\",\n    },\n  });\n};\n", "import { prisma } from \"~/utils/prisma.server\";\n\nexport const loader = async () => {\n  const tags = await prisma.tag.findMany();\n  const slugCombinations = tags\n    .map((tag) => {\n      return `Allow: /tags/${tag.slug}/`;\n    })\n    .join(\"\\n\");\n\n  const allowAssets = `Allow: /build/*.css\nAllow: /build/*.js\nAllow: /build/*.jpg\nAllow: /build/*.jpeg\nAllow: /build/*.png\nAllow: /build/*.gif`;\n\n  const allowPlausible = `Allow: /stats/js/script.js`;\n\n  const block = `${slugCombinations}\n${allowPlausible}\n${allowAssets}`;\n\n  const robotText = `\nUser-agent: Googlebot\nSitemap: https://hasanhub.com/sitemap.xml\nAllow: /$\n${block}\nDisallow: /\n\nUser-agent: Yandex\nSitemap: https://hasanhub.com/sitemap.xml\nAllow: /$\n${block}\nDisallow: /\n\nUser-agent: *\nSitemap: https://hasanhub.com/sitemap.xml\nAllow: /$\n${block}\nDisallow: /\n        `;\n  // return the text content, a status 200 success response, and set the content type to text/plain\n  return new Response(robotText, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"text/plain\",\n    },\n  });\n};\n", "import { z } from \"zod\";\nimport type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport getVideos from \"~/lib/getVideos\";\nimport { prisma } from \"~/utils/prisma.server\";\nimport VideosGrid from \"~/components/VideosGrid\";\nimport { useEffect, useState } from \"react\";\nimport getActiveTagsBySlugs from \"../../lib/getActiveTagsBySlugs\";\nimport type { Tag } from \"@prisma/client\";\nimport type { TimeFilterOptions } from \"../../lib/getVideos\";\nimport useFilterParams from \"~/hooks/useSearchParams\";\nimport { buildLoadMoreUrl } from \"~/helpers/buildUrl\";\n\nconst slugsParam = z.array(z.string());\n\nconst durationParams = z.array(\n  z.enum([\"short\", \"medium\", \"long\", \"extralong\"])\n);\nconst lastVideoIdParam = z.number();\n\nexport function headers() {\n  return {\n    \"Cache-Control\":\n      \"public, max-age=360, s-maxage=360, stale-while-revalidate\",\n  };\n}\n\nexport const meta: MetaFunction = ({ data, params }) => {\n  const { activeTags }: { activeTags: Tag[] } = data;\n  const title = activeTags.map((tag) => tag.name).join(\" / \");\n  return {\n    title: `${title} | HasanHub`,\n  };\n};\n\ntype GetVideoType = Awaited<ReturnType<typeof getVideos>>;\n\ntype LoaderData = {\n  videos: GetVideoType[0];\n  totalVideosCount: GetVideoType[1];\n  activeTags: Awaited<ReturnType<typeof getActiveTagsBySlugs>>;\n};\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const url = new URL(request.url);\n  const duration = url.searchParams.getAll(\n    \"duration\"\n  ) as unknown as TimeFilterOptions[];\n  const lastVideoId = url.searchParams.get(\"lastVideoId\");\n\n  const slugs = params[\"*\"]?.split(\"/\") ?? [];\n  slugsParam.parse(slugs);\n\n  let getParams: {\n    tagSlugs: string[];\n    durations?: TimeFilterOptions[];\n    lastVideoId?: number;\n  } = { tagSlugs: slugs };\n\n  if (duration) {\n    durationParams.parse(duration);\n    getParams[\"durations\"] = duration;\n  }\n  if (lastVideoId) {\n    lastVideoIdParam.parse(parseInt(lastVideoId));\n    getParams[\"lastVideoId\"] = parseInt(lastVideoId);\n  }\n\n  const [activeTags, [videos, totalVideosCount]] = await Promise.all([\n    getActiveTagsBySlugs(slugs),\n    getVideos(getParams),\n  ]);\n\n  await prisma.$disconnect();\n\n  return json(\n    { totalVideosCount, videos, activeTags },\n    {\n      status: 200,\n      headers: {\n        \"cache-control\":\n          \"public, max-age=360, s-maxage=360, stale-while-revalidate\",\n      },\n    }\n  );\n};\n\nexport default function TagPage() {\n  const { videos, totalVideosCount, activeTags } = useLoaderData<LoaderData>();\n  const [liveVideos, setLiveVideos] = useState<typeof videos>(videos);\n  const fetcher = useFetcher();\n  const { transitionState, durationFilter, nextDurationFilter } =\n    useFilterParams();\n\n  const title = activeTags.map((tag) => tag.name).join(\" / \");\n\n  const loaderUrl = (lastVideoId: number) => {\n    return buildLoadMoreUrl(\n      `/tags/`,\n      activeTags.map((tag) => tag.slug ?? \"\"),\n      nextDurationFilter.length > 0 ? nextDurationFilter : durationFilter,\n      lastVideoId,\n      false\n    );\n  };\n\n  useEffect(() => {\n    console.log(fetcher.data);\n    if (fetcher.data && fetcher.data.videos.length > 0) {\n      setLiveVideos((prev) => [...prev, ...fetcher.data.videos]);\n    }\n  }, [fetcher.data]);\n\n  const handleLoadMore = async (lastVideoId: number) => {\n    fetcher.load(loaderUrl(lastVideoId));\n  };\n\n  useEffect(() => {\n    setLiveVideos(videos);\n  }, [videos]);\n\n  return (\n    <VideosGrid\n      totalVideosCount={totalVideosCount}\n      handleLoadMore={handleLoadMore}\n      title={title}\n      videos={liveVideos}\n      loading={transitionState === \"loading\"}\n      loadMoreUrl={loaderUrl}\n      loadingMore={fetcher.state === \"loading\"}\n    />\n  );\n}\n", "import { prisma } from \"~/utils/prisma.server\";\n\nexport type TimeFilterOptions = 'all'\n  | 'short'\n  | 'medium'\n  | 'long'\n  | 'extralong';\n\nconst getLastVideo = async (lastVideoId: number) => {\n    return await prisma.video.findUnique({\n        where: { id: lastVideoId },\n        select: { publishedAt: true },\n    });\n}\n\nconst getMinxMaxForTimeFilter = (durations?: TimeFilterOptions[]) => {\n    return durations?.map(duration => {\n      switch (duration) {\n        case \"short\":\n          return [0, 60 * 3];\n        case \"medium\":\n          return [60 * 3, 60 * 15];\n        case \"long\":\n          return [60 * 15, 60 * 30];\n        case \"extralong\":\n          return [60 * 30, 999999];\n        default:\n          return [0, 999999999];\n      }\n    })\n}\n\ntype GetVideosArgs = {tagSlugs?: string[]; order?: 'asc' | 'desc'; durations?: TimeFilterOptions[]; lastVideoId?: number; take?: number};\n\nconst getVideos = async ({tagSlugs, order, durations, lastVideoId, take}: GetVideosArgs) => {    \n    let conditions: {tags?: object, publishedAt?: object, OR?: Array<object>, disabled?: boolean } = {};\n    if (tagSlugs) {\n        conditions['tags'] = { some: { tag: { slug: { in: tagSlugs } } } };\n    }\n    \n    const lastPublishedAt = lastVideoId ? (await getLastVideo(lastVideoId))?.publishedAt : null;\n    if (lastPublishedAt) {\n        if (order === 'asc') {\n            conditions['publishedAt'] = { gt: lastPublishedAt }\n        } else {\n            conditions['publishedAt'] = { lt: lastPublishedAt }\n        }\n    }\n\n    if (durations) {\n        const minMaxPairs = getMinxMaxForTimeFilter(durations)?.map((pair) => {return { gte: pair[0], lte: pair[1] }}) ?? [];\n        if (minMaxPairs.length > 0) {\n          conditions['OR'] = [];\n          minMaxPairs.forEach((pair) => {\n            conditions.OR?.push({ duration: pair });\n          }) \n\n        }\n    }\n\n    conditions['disabled'] = false;\n    return await prisma.$transaction([\n        prisma.video.findMany({\n            where: conditions,\n            take: take ?? 25,\n            include: { channel: true, tags: { include: { tag: true } } },\n            orderBy: { publishedAt: \"desc\" },\n        }),\n        prisma.video.count({\n            where: conditions,\n        })\n    ]);\n}\n\nexport default getVideos;", "import type { Tag } from \"@prisma/client\";\nimport TagButton from \"./tagButton\";\n\nconst Taglist = ({ tags }: { tags: Tag[] }) => {\n  return (\n    <ul className=\"flex flex-row flex-wrap px-3 lg:px-0 gap-3 text-sm w-full pb-3 overflow-x-auto\">\n      {tags.map((tag) => (\n        <li key={tag.id}>\n          <TagButton\n            href={`/tags/${tag.slug}`}\n            styleVariant=\"taglist\"\n            label={tag.name}\n            key={tag.id}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Taglist;\n", "import type { Channel, Tag, TagVideo, Video } from \"@prisma/client\";\nimport Taglist from \"./Taglist\";\n\nconst formatDate = (date: string | Date) => {\n  if (typeof date === \"string\") {\n    return new Date(date).toLocaleDateString();\n  }\n\n  return date.toLocaleDateString();\n};\n\nconst formatViewCount = (views: number) => {\n  if (views < 1000) {\n    return views;\n  } else if (views < 1000000) {\n    const thousands = Math.floor(views / 1000);\n    const hundreds = Math.floor((views % 1000) / 100);\n    return `${thousands}.${hundreds}k`;\n  } else {\n    const millions = Math.floor(views / 1000000);\n    const thousands = Math.floor((views % 1000000) / 10000);\n\n    return `${millions}.${thousands}m`;\n  }\n};\n\nconst formatDuration = (duration: number) => {\n  const hours = Math.floor(duration / 3600);\n  const minutes = Math.floor((duration % 3600) / 60);\n  const seconds = Math.floor(duration % 60);\n\n  const hoursString = hours > 0 ? hours : \"\";\n  const minutesString =\n    hours > 0 && minutes < 10 ? `0${minutes}` : `${minutes}`;\n  const secondsString = seconds > 9 ? `${seconds}` : `0${seconds}`;\n\n  return [hoursString, minutesString, secondsString].filter(Boolean).join(\":\");\n};\n\nconst VideoGridItem = ({\n  video,\n  layoutId,\n  lazy = false,\n}: {\n  video: Video & { channel: Channel | null } & {\n    tags: (TagVideo & {\n      tag: Tag | null;\n    })[];\n  };\n  lazy?: boolean;\n  layoutId?: string;\n}) => {\n  return (\n    <article\n      className=\"gap-5 h-full flex flex-col justify-between betterhover:hover:scale-[1.02] transition-transform group\"\n      key={video.youtubeId}\n    >\n      <div className=\"px-3 lg:px-0\">\n        <div className=\"aspect-video relative shadow-md dark:shadow-slate-800 \">\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={`https://www.youtube.com/watch?v=${video.youtubeId}`}\n          >\n            <img\n              className=\"w-full h-full object-cover\"\n              loading={lazy ? \"lazy\" : \"eager\"}\n              alt={`Thumbnail for ${video.title}`}\n              src={video.largeThumbnailUrl ?? \"\"}\n            />\n            {video.duration && (\n              <div className=\"bg-lightBlack group-hover:bg-opacity-90 text-sm bg-opacity-80 text-light absolute bottom-1 right-1 px-2 py-1\">\n                {formatDuration(video.duration)}\n              </div>\n            )}\n          </a>\n        </div>\n\n        <ul className=\"flex flex-row justify-between py-2 items-center w-full text-sm\">\n          <li>{video.publishedAt && formatDate(video.publishedAt)}</li>\n          <li>{formatViewCount(video.views ?? 0)} views</li>\n        </ul>\n\n        <div className=\"flex flex-row space-x-3 items-center relative w-full\">\n          <div className=\"flex flex-row items-center gap-x-3 p-3 pl-0 overflow-clip\">\n            <img\n              alt={video.channel?.title}\n              className=\"rounded-full\"\n              src={video.channel?.mediumThumbnailUrl ?? \"\"}\n              width={32}\n              height={32}\n              loading={lazy ? \"lazy\" : \"eager\"}\n            />\n            <a\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              className=\"inline-block overflow-hidden\"\n              href={`https://www.youtube.com/channel/${video.channel?.youtubeId}`}\n            >\n              <h3 className=\"text-sm font-semibold overflow-clip w-max\">\n                {video.channel?.title}\n              </h3>\n            </a>\n          </div>\n        </div>\n\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href={`https://www.youtube.com/watch?v=${video.youtubeId}`}\n        >\n          <h2 className=\"text-xl font-semibold flex-grow flex\">\n            {video.title}\n          </h2>\n        </a>\n      </div>\n\n      <div className=\" items-center \">\n        <Taglist tags={video.tags.map((tag) => tag.tag as Tag)} />\n      </div>\n    </article>\n  );\n};\n\nexport default VideoGridItem;\n", "import type { Channel, Tag, TagVideo, Video } from \"@prisma/client\";\nimport VideoGridItem from \"./VideoGridItem\";\nimport cx from \"classnames\";\nimport LoadingSpinner from \"./loadingSpinner\";\n\ntype VideoType = Video & {\n  channel: Channel | null;\n  tags: (TagVideo & {\n    tag: Tag | null;\n  })[];\n};\n\ntype Props = {\n  videos: VideoType[];\n  title: string;\n  totalVideosCount: number;\n  handleLoadMore: (lastVideoId: number) => Promise<void>;\n  loadMoreUrl: (lastVideoId: number) => string;\n  loading?: boolean;\n  loadingMore?: boolean;\n};\n\nconst VideosGrid = ({\n  videos,\n  title,\n  handleLoadMore,\n  totalVideosCount,\n  loading = false,\n  loadingMore = false,\n  loadMoreUrl,\n}: Props) => {\n  const lastVideoId = videos ? videos[videos.length - 1]?.id : null;\n\n  return (\n    <section aria-label={title} className=\"w-full lg:w-3/4 xl:w-4/5\">\n      <div\n        className={cx(\n          \"sticky top-0 w-full gap-1 text-left sm:gap-3 bg-light dark:bg-lightBlack z-20 flex flex-col md:flex-row md:items-center lg:flex-col transition-opacity lg:items-start justify-between px-3 lg:px-0 mb-5 py-5\",\n          { \"opacity-0\": loading }\n        )}\n      >\n        <h1 className={cx(\"text-4xl md:text-5xl mt-0\")}>{title}</h1>\n        <div className=\"text-sm font-semibold\">\n          <strong className={cx(\"font-extrabold\")}>{videos.length}</strong> of{\" \"}\n          <strong className={cx(\"font-extrabold\")}>{totalVideosCount}</strong>{\" \"}\n          Videos shown\n        </div>\n      </div>\n\n      <ul className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-10 relative z-10\">\n        {videos\n          .filter((video) => !video.disabled)\n          .map((video, index) =>\n            loading ? null : (\n              <li\n                style={{\n                  animationDuration: `${\n                    index % 25 < 10\n                      ? 250 + (index % 25) * 150\n                      : 1500 + (index % 25) * 50\n                  }ms`,\n                  animationName: \"fadeIn\",\n                }}\n                key={video.youtubeId}\n              >\n                <VideoGridItem video={video} lazy={index === 0} />\n              </li>\n            )\n          )}\n      </ul>\n      {loading ? (\n        <div className=\"flex justify-center\">\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <div className=\"w-full flex justify-center items-center my-10\">\n          {totalVideosCount > videos.length ? (\n            loadingMore ? (\n              <LoadingSpinner />\n            ) : (\n              <a\n                href={loadMoreUrl(lastVideoId ?? -1)}\n                onClick={(e: React.MouseEvent<HTMLAnchorElement>) => {\n                  e.preventDefault();\n\n                  handleLoadMore(lastVideoId ?? -1);\n                }}\n                className=\"bg-twitchPurpleLight text-light text-center font-bold betterhover:hover:bg-twitchPurple px-4 py-2 rounded inline-block saturate-50\"\n              >\n                Load more\n              </a>\n            )\n          ) : (\n            <span>All done</span>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default VideosGrid;\n", "const LoadingSpinner = () => {\n  return (\n    <div className=\"flex justify-center items-center gap-3\">\n      <span className=\"sr-only\">Loading...</span>\n      <div\n        className=\"bg-twitchPurple saturate-50 h-10 w-3\"\n        style={{\n          animationDuration: \"1000ms\",\n          animationName: \"pulse\",\n          animationIterationCount: \"infinite\",\n        }}\n      ></div>\n      <div\n        className=\"bg-twitchPurple saturate-50 h-10 w-3\"\n        style={{\n          animationDuration: \"1500ms\",\n          animationName: \"pulse\",\n          animationIterationCount: \"infinite\",\n        }}\n      ></div>\n      <div\n        className=\"bg-twitchPurple saturate-50 h-10 w-3\"\n        style={{\n          animationDuration: \"2000ms\",\n          animationName: \"pulse\",\n          animationIterationCount: \"infinite\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n", "import { prisma } from '~/utils/prisma.server';\nconst getActiveTagsBySlugs = async (tagSlugs: string[]) => {\n    return tagSlugs\n    ? await prisma.tag.findMany({\n        where: {\n          slug: { in: tagSlugs },\n        },\n      })\n    : [];\n}\n\nexport default getActiveTagsBySlugs;", "import { useSearchParams, useTransition } from \"@remix-run/react\";\nimport type { TimeFilterOptions } from \"~/components/filters\";\n\nconst useFilterParams = () => {\n    const transition = useTransition();\n    const [searchParams] = useSearchParams();\n\n    const durationFilter = (searchParams.getAll(\"duration\") ?? [\"all\"]) as unknown as TimeFilterOptions[];\n;\n    const nextSearchParams = new URLSearchParams(transition.location?.search);\n    const nextDurationFilter = nextSearchParams.getAll(\"duration\") as unknown as TimeFilterOptions[];\n\n    return {transitionState: transition.state, durationFilter, nextDurationFilter};\n}\n\nexport default useFilterParams;", "import type { TimeFilterOptions } from \"~/components/filters\";\n\nexport const buildLoadMoreUrl = (\n    base: string,\n    activeSlugs: string[],\n    activeDurationFilter: TimeFilterOptions[],\n    lastVideoId: number,\n    index: boolean\n  ) => {\n    const slugParams = activeSlugs.join(\"/\");\n    const durationParams = activeDurationFilter\n      .map((option) => `duration=${option}`)\n      .join(\"&\");\n  \n    return `${base}${slugParams}?${index ? 'index&' : ''}lastVideoId=${lastVideoId}&${durationParams}`;\n  };\n", "import { json } from \"@remix-run/node\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/utils/prisma.server\";\nimport VideosGrid from \"~/components/VideosGrid\";\nimport getVideos from \"../lib/getVideos\";\nimport { useEffect, useState } from \"react\";\nimport { z } from \"zod\";\nimport type { TimeFilterOptions } from \"../lib/getVideos\";\nimport useFilterParams from \"~/hooks/useSearchParams\";\nimport { buildLoadMoreUrl } from \"~/helpers/buildUrl\";\n\nexport function headers() {\n  return {\n    \"Cache-Control\":\n      \"public, max-age=360, s-maxage=360, stale-while-revalidate\",\n  };\n}\n\nconst durationParams = z.array(\n  z.enum([\"short\", \"medium\", \"long\", \"extralong\"])\n);\nconst lastVideoIdParam = z.number();\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const duration = url.searchParams.getAll(\n    \"duration\"\n  ) as unknown as TimeFilterOptions[];\n  const lastVideoId = url.searchParams.get(\"lastVideoId\");\n\n  let getParams: {\n    durations?: TimeFilterOptions[];\n    lastVideoId?: number;\n  } = {};\n\n  if (duration) {\n    durationParams.parse(duration);\n    getParams[\"durations\"] = duration;\n  }\n  if (lastVideoId) {\n    lastVideoIdParam.parse(parseInt(lastVideoId));\n    getParams[\"lastVideoId\"] = parseInt(lastVideoId);\n  }\n\n  const [videos, totalVideosCount] = await getVideos(getParams);\n\n  await prisma.$disconnect();\n\n  return json(\n    { totalVideosCount, videos },\n    {\n      status: 200,\n      headers: {\n        \"cache-control\":\n          \"public, max-age=360, s-maxage=360, stale-while-revalidate\",\n      },\n    }\n  );\n};\n\nexport default function Index() {\n  const { totalVideosCount, videos } = useLoaderData();\n  const [liveVideos, setLiveVideos] = useState<typeof videos>(videos);\n  const fetcher = useFetcher();\n  const { transitionState, durationFilter, nextDurationFilter } =\n    useFilterParams();\n\n  const loaderUrl = (lastVideoId: number) => {\n    return buildLoadMoreUrl(\n      `/`,\n      [],\n      nextDurationFilter?.length > 0 ? nextDurationFilter : durationFilter,\n      lastVideoId,\n      true\n    );\n  };\n\n  useEffect(() => {\n    console.log(fetcher.data);\n    if (fetcher.data && fetcher.data.videos?.length > 0) {\n      setLiveVideos((prev) => [...prev, ...fetcher.data.videos]);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    setLiveVideos(videos);\n  }, [videos]);\n\n  const handleLoadMore = async (lastVideoId: number) => {\n    fetcher.load(loaderUrl(lastVideoId));\n  };\n\n  return (\n    <VideosGrid\n      totalVideosCount={totalVideosCount}\n      handleLoadMore={handleLoadMore}\n      title={\"Latest Videos\"}\n      videos={liveVideos}\n      loading={transitionState === \"loading\"}\n      loadMoreUrl={loaderUrl}\n      loadingMore={fetcher.state === \"loading\"}\n    />\n  );\n}\n", "export default {'version':'d71aa69f','entry':{'module':'/build/entry.client-NCECLBS2.js','imports':['/build/_shared/chunk-YH3MWQ7C.js','/build/_shared/chunk-DOWUSMN5.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-262LHSUG.js','imports':['/build/_shared/chunk-YKM2VUML.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/[robots.txt]':{'id':'routes/[robots.txt]','parentId':'root','path':'robots.txt','index':undefined,'caseSensitive':undefined,'module':'/build/routes/[robots.txt]-HND7TPYJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/[sitemap.xml]':{'id':'routes/[sitemap.xml]','parentId':'root','path':'sitemap.xml','index':undefined,'caseSensitive':undefined,'module':'/build/routes/[sitemap.xml]-MDOZ4OWO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-OXO5QIG4.js','imports':['/build/_shared/chunk-MOXYSCIF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tags/$':{'id':'routes/tags/$','parentId':'root','path':'tags/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tags/$-DFTQYYRH.js','imports':['/build/_shared/chunk-MOXYSCIF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D71AA69F.js'};", "\nimport * as entryServer from \"/Users/christian/dev/hasanhub/app/entry.server.tsx\";\nimport * as route0 from \"/Users/christian/dev/hasanhub/app/root.tsx\";\nimport * as route1 from \"/Users/christian/dev/hasanhub/app/routes/[sitemap.xml].tsx\";\nimport * as route2 from \"/Users/christian/dev/hasanhub/app/routes/[robots.txt].tsx\";\nimport * as route3 from \"/Users/christian/dev/hasanhub/app/routes/tags/$.tsx\";\nimport * as route4 from \"/Users/christian/dev/hasanhub/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/[sitemap.xml]\": {\n      id: \"routes/[sitemap.xml]\",\n      parentId: \"root\",\n      path: \"sitemap.xml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/[robots.txt]\": {\n      id: \"routes/[robots.txt]\",\n      parentId: \"root\",\n      path: \"robots.txt\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/tags/$\": {\n      id: \"routes/tags/$\",\n      parentId: \"root\",\n      path: \"tags/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
