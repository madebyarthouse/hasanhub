{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/christian/dev/hasanhub/app/root.tsx", "../app/components/header.tsx", "../app/components/layout.tsx", "../app/components/tagButton.tsx", "../app/components/sidebar.tsx", "../app/utils/prisma.server.ts", "/Users/christian/dev/hasanhub/app/routes/tags/$.tsx", "../app/lib/getVideos.ts", "../app/components/Taglist.tsx", "../app/components/VideoGridItem.tsx", "../app/components/VideosGrid.tsx", "../app/lib/getActiveTagsBySlugs.ts", "../app/hooks/useSearchParams.ts", "/Users/christian/dev/hasanhub/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Tag } from \"@prisma/client\";\nimport { json, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useFetcher,\n  useLoaderData,\n  useSearchParams,\n} from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport type { TimeFilterOptions } from \"./components/filters\";\nimport Layout from \"./components/layout\";\nimport Sidebar from \"./components/sidebar\";\nimport styles from \"./styles/app.css\";\nimport { prisma } from \"./utils/prisma.server\";\nimport { useTransition } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"HasanHub\",\n  viewport: \"width=device-width,initial-scale=1\",\n  description: \"The HasanAbi Clips Industrial Complex App\",\n  \"msapplication-tileColor\": \"#da532c\",\n  \"theme-color\": \"#ffffff\",\n});\n\nexport function links() {\n  return [\n    { rel: \"stylesheet\", href: styles },\n    { rel: \"icon\", href: \"/favicon.ico\" },\n    {\n      rel: \"apple-touch-icon\",\n      size: \"180x180x\",\n      href: \"/apple-touch-icon.png\",\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"32x32\",\n      href: \"/favicon-32x32.png\",\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"16x16\",\n      href: \"/favicon-16x16.png\",\n    },\n    {\n      rel: \"mask-icon\",\n      href: \"/safari-pinned-tab.svg\",\n      color: \"#5bbad5\",\n    },\n    {\n      rel: \"manifest\",\n      href: \"site.webmanifest\",\n    },\n  ];\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const slugs = params[\"*\"]?.split(\"/\") ?? [];\n  console.log(\"root reload\", slugs);\n  const tags = await prisma.tag.findMany({\n    orderBy: {\n      videos: {\n        _count: \"desc\",\n      },\n    },\n  });\n\n  const activeTags =\n    slugs.length > 0\n      ? await prisma.tag.findMany({\n          where: {\n            slug: { in: slugs },\n          },\n        })\n      : [];\n\n  await prisma.$disconnect();\n\n  return json({\n    tags,\n    activeTags,\n  });\n};\n\nexport default function App() {\n  const { tags, activeTags } = useLoaderData();\n  const [searchParams] = useSearchParams();\n  const durationFilter = searchParams.get(\"duration\") ?? \"all\";\n  const fetcher = useFetcher();\n  const transition = useTransition();\n  const nextSearchParams = new URLSearchParams(transition.location?.search);\n  const nextDuration = nextSearchParams.get(\"duration\");\n\n  useEffect(() => {\n    console.log(transition.location?.pathname);\n    if (transition.location) {\n      fetcher.load(transition.location.pathname);\n    }\n  }, [transition.location]);\n\n  console.log(\"app reload\", activeTags, fetcher.data);\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout>\n          <Sidebar\n            tags={tags}\n            activeTags={fetcher.data?.activeTags ?? activeTags}\n            durationFilter={nextDuration ?? durationFilter}\n          />\n          <Outlet />\n        </Layout>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\n\nconst Header = () => {\n  return (\n    <header className=\"px-5 lg:px-10 xl:px-14 my-6 flex gap-3 sm:gap-0 flex-col sm:flex-row justify-between\">\n      <Link to=\"/\" prefetch=\"render\">\n        <h1 className=\"text-4xl lg:text-7xl font-bold sm:text-left group text-center\">\n          Hasan\n          <span className=\"dark:text-black text-white inline-block bg-twitchPurpleLight group-hover:bg-twitchPurple p-2 ml-2 rounded-lg saturate-50\">\n            Hub\n          </span>\n        </h1>\n      </Link>\n\n      <div className=\"flex flex-row gap-2 justify-center sm:justify-end items-center text-sm md:text-base\">\n        <a\n          href=\"https://twitter.com/chrcit\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"bg-twitchPurpleLight saturate-50 text-white text-center font-bold hover:bg-twitchPurple px-4 py-2 rounded\"\n        >\n          Made by @chrcit\n        </a>\n        <a\n          href=\"https://buymeacoffee.com/chrcit\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"bg-twitchPurpleLight saturate-50 text-white text-center font-bold hover:bg-twitchPurple px-4 py-2 rounded\"\n        >\n          Buy me a coffee\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n", "import Header from \"~/components/header\";\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <>\n      <Header />\n      <main className=\"mx-auto items-start px-0 lg:px-10 xl:px-14 flex flex-col lg:flex-row relative lg:gap-20\">\n        {children}\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n", "import cx from \"classnames\";\nimport { Link } from \"@remix-run/react\";\n\nconst TagButton = ({\n  label,\n  active = false,\n  styleVariant = \"sidebar\",\n  href,\n}: {\n  href: string;\n  active?: boolean;\n  label: string;\n  styleVariant: \"sidebar\" | \"taglist\";\n}) => {\n  return (\n    <>\n      <div className=\"min-w-max\">\n        <Link\n          to={href}\n          className={cx(\n            \"border-twitchPurpleLight duration-400 transition-colors border  hover:bg-twitchPurple hover:text-white inline-block rounded-lg saturate-50 \",\n            styleVariant === \"sidebar\"\n              ? \"text-base px-3 py-2\"\n              : \"text-sm px-2 py-1\",\n            active\n              ? \"bg-twitchPurple text-white\"\n              : \"bg-white dark:bg-black text-twitchPurpleLight\"\n          )}\n        >\n          {label}\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default TagButton;\n", "import type { Tag } from \"@prisma/client\";\nimport TagButton from \"./tagButton\";\nimport { motion } from \"framer-motion\";\nimport type { TimeFilterOptions } from \"./filters\";\nimport { useEffect, useState } from \"react\";\n\nconst gridContainerVariants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n};\n\nconst gridElVariant = {\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 1,\n    },\n  },\n};\n\nconst constructUrl = (\n  base: string,\n  activeSlugs: string[],\n  newSlug: string | null,\n  duration: TimeFilterOptions\n) => {\n  let slugs = activeSlugs;\n  if (newSlug) {\n    slugs = activeSlugs.includes(newSlug)\n      ? activeSlugs.filter((slug) => slug !== newSlug)\n      : [...activeSlugs, newSlug];\n  }\n\n  let fullUrl = `${base}${slugs.sort().join(\"/\")}?duration=${duration}`;\n\n  return fullUrl.endsWith(`${base}?duration=${duration}`)\n    ? \"/\" + fullUrl.replace(base, \"\")\n    : fullUrl;\n};\n\nconst Sidebar = ({\n  tags,\n  activeTags,\n  durationFilter,\n}: {\n  tags: Tag[];\n  activeTags: Tag[];\n  durationFilter: TimeFilterOptions;\n}) => {\n  const [base, setBase] = useState(activeTags.length > 0 ? \"/tags/\" : \"/\");\n  const activeTagSlugs = activeTags.map((tag) => tag.slug ?? \"\");\n  const durationFilterData: { value: TimeFilterOptions; label: string }[] = [\n    { value: \"all\", label: \"All\" },\n    { value: \"short\", label: \"< 2min\" },\n    { value: \"medium\", label: \"2-15min\" },\n    { value: \"long\", label: \"15-30min\" },\n    { value: \"extralong\", label: \"> 30 min\" },\n  ];\n\n  useEffect(() => {\n    setBase(activeTags.length > 0 ? \"/tags/\" : \"/\");\n  }, [activeTags]);\n\n  return (\n    <>\n      <motion.aside\n        layout\n        className=\"w-full lg:sticky lg:top-0 lg:w-1/4 xl:w-1/5  py-5     px-3 lg:px-0\"\n      >\n        <section className=\"lg:overflow-y-auto lg:max-h-[calc(100vh-2.5rem)] lg:pr-3 flex flex-col gap-y-5\">\n          {/* Time */}\n          <motion.ul\n            className=\"flex flex-row flex-nowrap pb-3 sm:pb-0 overflow-x-auto sm:overflow-x-visible sm:flex-wrap rounded gap-3\"\n            variants={gridContainerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            {durationFilterData.map(({ value, label }) => (\n              <motion.li variants={gridElVariant} key={value}>\n                <TagButton\n                  href={constructUrl(base, activeTagSlugs, null, value)}\n                  styleVariant=\"sidebar\"\n                  label={label}\n                  active={durationFilter === value}\n                />\n              </motion.li>\n            ))}\n          </motion.ul>\n\n          {/* Tags  */}\n          <motion.ul\n            variants={gridContainerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            className=\"grid pb-3  lg:pb-0  grid-flow-col grid-rows-2 sm:grid-rows-4 lg:flex lg:flex-row flex-nowrap lg:flex-wrap gap-y-2 gap-x-3 text-base overflow-x-auto lg:overflow-x-visible\"\n          >\n            {tags.map((tag) => (\n              <motion.li variants={gridElVariant} key={tag.id}>\n                <TagButton\n                  href={constructUrl(\n                    \"/tags/\",\n                    activeTagSlugs,\n                    tag.slug,\n                    durationFilter\n                  )}\n                  styleVariant=\"sidebar\"\n                  label={tag.name}\n                  active={activeTagSlugs.includes(tag.slug ?? \"\")}\n                />\n              </motion.li>\n            ))}\n          </motion.ul>\n        </section>\n      </motion.aside>\n    </>\n  );\n};\n\nexport default Sidebar;\n", "// app/utils/prisma.server.ts\nimport { PrismaClient } from '@prisma/client'\n\nlet prisma: PrismaClient\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n  prisma.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  prisma = global.__db\n}\n\nexport { prisma }", "import { z } from \"zod\";\nimport type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport getVideos from \"~/lib/getVideos\";\nimport { prisma } from \"~/utils/prisma.server\";\nimport VideosGrid from \"~/components/VideosGrid\";\nimport { useEffect, useState } from \"react\";\nimport getActiveTagsBySlugs from \"../../lib/getActiveTagsBySlugs\";\nimport type { Tag } from \"@prisma/client\";\nimport type { TimeFilterOptions } from \"../../lib/getVideos\";\nimport useFilterParams from \"~/hooks/useSearchParams\";\n\nconst slugsParam = z.array(z.string());\n\nconst durationParam = z.enum([\"all\", \"short\", \"medium\", \"long\", \"extralong\"]);\nconst lastVideoIdParam = z.number();\n\nexport function headers() {\n  return {\n    \"Cache-Control\": \"max-age=360, s-maxage=360, stale-while-revalidate\",\n  };\n}\n\nexport const meta: MetaFunction = ({ data, params }) => {\n  const { activeTags }: { activeTags: Tag[] } = data;\n  const title = activeTags.map((tag) => tag.name).join(\" / \");\n  return {\n    title: `${title} | HasanHub`,\n  };\n};\n\ntype GetVideoType = Awaited<ReturnType<typeof getVideos>>;\n\ntype LoaderData = {\n  videos: GetVideoType[0];\n  totalVideosCount: GetVideoType[1];\n  activeTags: Awaited<ReturnType<typeof getActiveTagsBySlugs>>;\n};\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const url = new URL(request.url);\n  const duration = url.searchParams.get(\"duration\");\n  const lastVideoId = url.searchParams.get(\"lastVideoId\");\n\n  const slugs = params[\"*\"]?.split(\"/\") ?? [];\n  slugsParam.parse(slugs);\n\n  let getParams: {\n    tagSlugs: string[];\n    duration?: TimeFilterOptions;\n    lastVideoId?: number;\n  } = { tagSlugs: slugs };\n\n  if (duration) {\n    durationParam.parse(duration);\n    getParams[\"duration\"] = duration;\n  }\n  if (lastVideoId) {\n    lastVideoIdParam.parse(parseInt(lastVideoId));\n    getParams[\"lastVideoId\"] = parseInt(lastVideoId);\n  }\n\n  const [activeTags, [videos, totalVideosCount]] = await Promise.all([\n    getActiveTagsBySlugs(slugs),\n    getVideos(getParams),\n  ]);\n\n  await prisma.$disconnect();\n\n  return json(\n    { totalVideosCount, videos, activeTags },\n    {\n      status: 200,\n      headers: {\n        \"cache-control\": \"max-age=360, s-maxage=360, stale-while-revalidate\",\n      },\n    }\n  );\n};\n\nexport default function TagPage() {\n  const { videos, totalVideosCount, activeTags } = useLoaderData<LoaderData>();\n  const [liveVideos, setLiveVideos] = useState<typeof videos>(videos);\n  const fetcher = useFetcher();\n  const { transitionState, durationFilter, nextDurationFilter } =\n    useFilterParams();\n\n  const slugUrl = activeTags.map((tag) => tag.slug).join(\"/\");\n  const title = activeTags.map((tag) => tag.name).join(\" / \");\n\n  const loaderUrl = `/tags/${slugUrl}?duration=${\n    nextDurationFilter ?? durationFilter\n  }&lastVideoId`;\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.videos.length > 0) {\n      setLiveVideos((prev) => [...prev, ...fetcher.data.videos]);\n    }\n  }, [fetcher.data]);\n\n  const handleLoadMore = async (lastVideoId: number | null) => {\n    console.log(\"handleLoadMore\", lastVideoId);\n    fetcher.load(`${loaderUrl}=${lastVideoId}`);\n  };\n\n  return (\n    <VideosGrid\n      totalVideosCount={totalVideosCount}\n      handleLoadMore={handleLoadMore}\n      title={title}\n      videos={liveVideos}\n      loading={transitionState === \"loading\"}\n      loadMoreUrl={loaderUrl}\n      loadingMore={fetcher.state === \"loading\"}\n    />\n  );\n}\n", "import { prisma } from \"~/utils/prisma.server\";\n\nexport type TimeFilterOptions = 'all'\n  | 'short'\n  | 'medium'\n  | 'long'\n  | 'extralong';\n\nconst getLastVideo = async (lastVideoId: number) => {\n    return await prisma.video.findUnique({\n        where: { id: lastVideoId },\n        select: { publishedAt: true },\n    });\n}\n\nconst getMinxMaxForTimeFilter = (time?: TimeFilterOptions) => {\n    let minSeconds;\n    let maxSeconds;\n    switch (time) {\n      case \"all\":\n        minSeconds = 0;\n        maxSeconds = 999999999;\n        break;\n      case \"short\":\n        minSeconds = 0;\n        maxSeconds = 60 * 3;\n        break;\n      case \"medium\":\n        minSeconds = 60 * 3;\n        maxSeconds = 60 * 15;\n        break;\n      case \"long\":\n        minSeconds = 60 * 15;\n        maxSeconds = 60 * 30;\n        break;\n      case \"extralong\":\n        minSeconds = 60 * 30;\n        maxSeconds = 999999999;\n        break;\n      default:\n        minSeconds = 0;\n        maxSeconds = 999999999;\n        break;\n    }\n\n    return [minSeconds, maxSeconds];\n}\n\ntype GetVideosArgs = {tagSlugs?: string[]; order?: 'asc' | 'desc'; duration?: TimeFilterOptions; lastVideoId?: number; take?: number};\n\nconst getVideos = async ({tagSlugs, order, duration, lastVideoId, take}: GetVideosArgs) => {    \n    let conditions: {tags?: object, publishedAt?: object, duration?: object, disabled?: boolean } = {};\n    if (tagSlugs) {\n        conditions['tags'] = { some: { tag: { slug: { in: tagSlugs } } } };\n    }\n    \n    const lastPublishedAt = lastVideoId ? (await getLastVideo(lastVideoId))?.publishedAt : null;\n    if (lastPublishedAt) {\n        if (order === 'asc') {\n            conditions['publishedAt'] = { gt: lastPublishedAt }\n        } else {\n            conditions['publishedAt'] = { lt: lastPublishedAt }\n        }\n    }\n\n    if (duration) {\n        const [minSeconds, maxSeconds] = getMinxMaxForTimeFilter(duration);\n        conditions['duration'] = { gte: minSeconds, lte: maxSeconds }\n    }\n\n    conditions['disabled'] = false;\n    return await prisma.$transaction([\n        prisma.video.findMany({\n            where: conditions,\n            take: take ?? 25,\n            include: { channel: true, tags: { include: { tag: true } } },\n            orderBy: { publishedAt: \"desc\" },\n        }),\n        prisma.video.count({\n            where: conditions,\n        })\n    ]);\n}\n\nexport default getVideos;", "import type { Tag } from \"@prisma/client\";\nimport TagButton from \"./tagButton\";\n\nconst Taglist = ({ tags }: { tags: Tag[] }) => {\n  return (\n    <ul className=\"flex flex-row flex-wrap px-3 lg:px-0 gap-3 text-sm w-full pb-3 overflow-x-auto\">\n      {tags.map((tag) => (\n        <li key={tag.id}>\n          <TagButton\n            href={`/tags/${tag.slug}`}\n            styleVariant=\"taglist\"\n            label={tag.name}\n            key={tag.id}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Taglist;\n", "import { Channel, Tag, TagVideo, Video } from \"@prisma/client\";\nimport Taglist from \"./Taglist\";\nimport { motion } from \"framer-motion\";\n\nconst formatDate = (date: string | Date) => {\n  if (typeof date === \"string\") {\n    return new Date(date).toLocaleDateString();\n  }\n\n  return date.toLocaleDateString();\n};\n\nconst formatDuration = (duration: number) => {\n  const hours = Math.floor(duration / 3600);\n  const minutes = Math.floor((duration % 3600) / 60);\n  const seconds = Math.floor(duration % 60);\n\n  const hoursString = hours > 0 ? hours : \"\";\n  const minutesString =\n    hours > 0 && minutes < 10 ? `0${minutes}` : `${minutes}`;\n  const secondsString = seconds > 9 ? `${seconds}` : `0${seconds}`;\n\n  return [hoursString, minutesString, secondsString].filter(Boolean).join(\":\");\n};\n\nconst VideoGridItem = ({\n  video,\n  layoutId,\n  lazy = false,\n}: {\n  video: Video & { channel: Channel | null } & {\n    tags: (TagVideo & {\n      tag: Tag | null;\n    })[];\n  };\n  lazy?: boolean;\n  layoutId?: string;\n}) => {\n  return (\n    <motion.article\n      layoutId={layoutId}\n      className=\"gap-5 h-full flex flex-col justify-between\"\n      key={video.youtubeId}\n    >\n      <div className=\"px-3 lg:px-0\">\n        <div className=\"aspect-video relative group shadow-md dark:shadow-slate-800\">\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={`https://www.youtube.com/watch?v=${video.youtubeId}`}\n          >\n            {/* <div\n              className=\"w-full h-full bg-cover bg-center\"\n              style={{\n                backgroundImage: `url(${video.largeThumbnailUrl})` ?? \"\",\n              }}\n            /> */}\n            <img\n              className=\"w-full h-full object-cover\"\n              loading={lazy ? \"lazy\" : \"eager\"}\n              alt={`Thumbnail for ${video.title}`}\n              src={video.largeThumbnailUrl ?? \"\"}\n            />\n            {video.duration && (\n              <div className=\"bg-black group-hover:bg-opacity-90 text-sm bg-opacity-80 text-white absolute bottom-1 right-1 px-2 py-1\">\n                {formatDuration(video.duration)}\n              </div>\n            )}\n          </a>\n        </div>\n\n        <ul className=\"flex flex-row justify-between py-2 items-center w-full text-sm\">\n          <li>{video.publishedAt && formatDate(video.publishedAt)}</li>\n          <li>{video.views} views</li>\n        </ul>\n\n        <div className=\"flex flex-row space-x-3 items-center relative w-full\">\n          <div className=\"flex flex-row items-center gap-x-3 p-3 pl-0 overflow-clip\">\n            <img\n              alt={video.channel?.title}\n              className=\"rounded-full\"\n              src={video.channel?.mediumThumbnailUrl ?? \"\"}\n              width={32}\n              height={32}\n              loading={lazy ? \"lazy\" : \"eager\"}\n            />\n            <a\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              className=\"inline-block overflow-hidden\"\n              href={`https://www.youtube.com/channel/${video.channel?.youtubeId}`}\n            >\n              <h3 className=\"text-sm font-semibold overflow-clip w-max\">\n                {video.channel?.title}\n              </h3>\n            </a>\n          </div>\n        </div>\n\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href={`https://www.youtube.com/watch?v=${video.youtubeId}`}\n        >\n          <h2 className=\"text-xl font-semibold flex-grow flex\">\n            {video.title}\n          </h2>\n        </a>\n      </div>\n\n      <div className=\" items-center \">\n        <Taglist tags={video.tags.map((tag) => tag.tag as Tag)} />\n      </div>\n    </motion.article>\n  );\n};\n\nexport default VideoGridItem;\n", "import { Channel, Tag, TagVideo, Video } from \"@prisma/client\";\nimport VideoGridItem from \"./VideoGridItem\";\nimport { AnimatePresence, LayoutGroup, motion } from \"framer-motion\";\nimport React, { Fragment, useState } from \"react\";\nimport Filters, { TimeFilterOptions } from \"./filters\";\nimport Index from \"../routes/index\";\n\ntype VideoType = Video & {\n  channel: Channel | null;\n  tags: (TagVideo & {\n    tag: Tag | null;\n  })[];\n};\n\ntype Props = {\n  videos: VideoType[];\n  title: string;\n  totalVideosCount: number;\n  handleLoadMore: (lastVideoId: number | null) => Promise<void>;\n  loading?: boolean;\n  loadingMore?: boolean;\n  loadMoreUrl: string;\n};\n\nconst gridContainerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nconst gridElVariant = {\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n  },\n};\n\nconst VideosGrid = ({\n  videos,\n  title,\n  handleLoadMore,\n  totalVideosCount,\n  loading = false,\n  loadingMore = false,\n  loadMoreUrl,\n}: Props) => {\n  const lastVideoId = videos ? videos[videos.length - 1]?.id : null;\n\n  return (\n    <section aria-label={title} className=\"w-full lg:w-3/4 xl:w-4/5\">\n      <div className=\"sticky top-0 w-full gap-1 text-left sm:gap-3 bg-white dark:bg-black z-20 flex flex-col md:flex-row md:items-center lg:flex-col lg:items-start justify-between px-3 lg:px-0 mb-5 py-5\">\n        <h1 className=\"text-4xl md:text-5xl mt-0\">\n          {loading ? \"Loading...\" : title}\n        </h1>\n        <div className=\"text-sm font-semibold\">\n          <strong className=\"font-extrabold\">\n            {loading ? \"x\" : videos.length}\n          </strong>{\" \"}\n          of{\" \"}\n          <strong className=\"font-extrabold\">\n            {loading ? \"x\" : totalVideosCount}\n          </strong>{\" \"}\n          Videos shown\n        </div>\n      </div>\n\n      {loading ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <motion.ul\n            variants={gridContainerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-10 relative z-10\"\n          >\n            <AnimatePresence>\n              {videos\n                .filter((video) => !video.disabled)\n                .map((video, index) => (\n                  <Fragment key={video.youtubeId}>\n                    <motion.li variants={gridElVariant} exit={{ opacity: 0 }}>\n                      <VideoGridItem video={video} lazy={index === 0} />\n                    </motion.li>\n                  </Fragment>\n                ))}\n            </AnimatePresence>\n          </motion.ul>\n\n          <div className=\"w-full flex justify-center items-center my-10\">\n            {totalVideosCount > videos.length ? (\n              <a\n                href={`${loadMoreUrl}=${lastVideoId}`}\n                onClick={(e: React.MouseEvent<HTMLAnchorElement>) => {\n                  e.preventDefault();\n\n                  handleLoadMore(lastVideoId);\n                }}\n                className=\"bg-twitchPurpleLight text-white text-center font-bold hover:bg-twitchPurple px-4 py-2 rounded inline-block\"\n              >\n                {loadingMore ? \"Loading...\" : \"Load more\"}\n              </a>\n            ) : (\n              <span>All done</span>\n            )}\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default VideosGrid;\n", "import { prisma } from '~/utils/prisma.server';\nconst getActiveTagsBySlugs = async (tagSlugs: string[]) => {\n    return tagSlugs\n    ? await prisma.tag.findMany({\n        where: {\n          slug: { in: tagSlugs },\n        },\n      })\n    : [];\n}\n\nexport default getActiveTagsBySlugs;", "import { useSearchParams, useTransition } from \"@remix-run/react\";\n\nconst useFilterParams = () => {\n    const transition = useTransition();\n    const [searchParams] = useSearchParams();\n\n    const durationFilter = searchParams.get(\"duration\") ?? \"all\";\n;\n    const nextSearchParams = new URLSearchParams(transition.location?.search);\n    const nextDurationFilter = nextSearchParams.get(\"duration\");\n\n    return {transitionState: transition.state, durationFilter, nextDurationFilter};\n}\n\nexport default useFilterParams;", "import { json } from \"@remix-run/node\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/utils/prisma.server\";\nimport VideosGrid from \"~/components/VideosGrid\";\nimport getVideos from \"../lib/getVideos\";\nimport { useEffect, useState } from \"react\";\nimport { z } from \"zod\";\nimport type { TimeFilterOptions } from \"../lib/getVideos\";\nimport useFilterParams from \"~/hooks/useSearchParams\";\n\nexport function headers() {\n  return {\n    \"Cache-Control\": \"max-age=360, s-maxage=360, stale-while-revalidate\",\n  };\n}\n\nconst durationParam = z.enum([\"all\", \"short\", \"medium\", \"long\", \"extralong\"]);\nconst lastVideoIdParam = z.number();\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const duration = url.searchParams.get(\"duration\");\n  const lastVideoId = url.searchParams.get(\"lastVideoId\");\n\n  let getParams: {\n    duration?: TimeFilterOptions;\n    lastVideoId?: number;\n  } = {};\n\n  if (duration) {\n    durationParam.parse(duration);\n    getParams[\"duration\"] = duration;\n  }\n  if (lastVideoId) {\n    lastVideoIdParam.parse(parseInt(lastVideoId));\n    getParams[\"lastVideoId\"] = parseInt(lastVideoId);\n  }\n\n  const [videos, totalVideosCount] = await getVideos(getParams);\n\n  await prisma.$disconnect();\n\n  return json(\n    { totalVideosCount, videos },\n    {\n      status: 200,\n      headers: {\n        \"cache-control\": \"max-age=360, s-maxage=360, stale-while-revalidate\",\n      },\n    }\n  );\n};\n\nexport default function Index() {\n  const { totalVideosCount, videos } = useLoaderData();\n  const [liveVideos, setLiveVideos] = useState<typeof videos>(videos);\n  const fetcher = useFetcher();\n  const { transitionState, durationFilter, nextDurationFilter } =\n    useFilterParams();\n\n  const loaderUrl = `?index&duration=${\n    nextDurationFilter ?? durationFilter\n  }&lastVideoId`;\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.videos.length > 0) {\n      setLiveVideos((prev) => [...prev, ...fetcher.data.videos]);\n    }\n  }, [fetcher.data]);\n\n  const handleLoadMore = async (lastVideoId: number | null) => {\n    console.log(\"handleLoadMore\", lastVideoId);\n    fetcher.load(`${loaderUrl}=${lastVideoId}`);\n  };\n\n  return (\n    <VideosGrid\n      totalVideosCount={totalVideosCount}\n      handleLoadMore={handleLoadMore}\n      title={\"Latest Videos\"}\n      videos={liveVideos}\n      loading={transitionState === \"loading\"}\n      loadMoreUrl={loaderUrl}\n      loadingMore={fetcher.state === \"loading\"}\n    />\n  );\n}\n", "export default {'version':'eed6c511','entry':{'module':'/build/entry.client-YSAE6JKA.js','imports':['/build/_shared/chunk-RBNDSXBQ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ABLDG5W4.js','imports':['/build/_shared/chunk-BPJCEKO4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-XOWR2LPC.js','imports':['/build/_shared/chunk-COOIJHSK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tags/$':{'id':'routes/tags/$','parentId':'root','path':'tags/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tags/$-7UXLFL3V.js','imports':['/build/_shared/chunk-COOIJHSK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-EED6C511.js'};", "\nimport * as entryServer from \"/Users/christian/dev/hasanhub/app/entry.server.tsx\";\nimport * as route0 from \"/Users/christian/dev/hasanhub/app/root.tsx\";\nimport * as route1 from \"/Users/christian/dev/hasanhub/app/routes/tags/$.tsx\";\nimport * as route2 from \"/Users/christian/dev/hasanhub/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/tags/$\": {\n      id: \"routes/tags/$\",\n      parentId: \"root\",\n      path: \"tags/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
